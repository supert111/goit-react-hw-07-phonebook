{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","searchByFilter","axios","defaults","baseURL","nameInputId","shortid","generate","phoneInputId","ContactForm","state","name","number","handleChange","element","target","value","setState","handleSubmit","el","preventDefault","props","onSubmit","className","styles","wrapper","this","htmlFor","input_display","type","pattern","title","required","id","onChange","button_prime","Component","connect","dispatch","contact","post","then","data","catch","error","addContact","searchFilter","allContacts","filter","caseInsensitive","toLocaleLowerCase","includes","contacts","phoneBook","onDeleteContact","contactId","delete","map","nameContact","button","onClick","e","App","handleFilter","fetchContact","console","log","container","isLoading","loading","get","createReducer","_","payload","find","alert","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ee6b689.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactForm_wrapper__1xzvH\",\"input_display\":\"ContactForm_input_display__UsO0Z\",\"button_prime\":\"ContactForm_button_prime__3EFe8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__2efW1\",\"contact\":\"ContactList_contact__M7gPR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1XzsH\",\"wrapper\":\"App_wrapper__3Uqin\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_display\":\"Filter_input_display__UhGrR\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const searchByFilter = createAction('contacts/SearchByFilter');\r\n","import axios from 'axios';\r\nimport {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactSuccess,\r\n    addContactRequest,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n    dispatch(fetchContactRequest());\r\n\r\n    axios\r\n        .get('/contacts')\r\n        .then(({data}) => dispatch(fetchContactSuccess(data)))\r\n        .catch(error => dispatch(fetchContactError(error)));\r\n};\r\n\r\nexport const addContact = ({name, number}) => dispatch => {\r\n    const contact = {name, number};\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({data}) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)));\r\n}\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(() => dispatch(deleteContactSuccess(contactId)))\r\n        .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport styles from \"./ContactForm.module.css\";\r\nimport shortid from 'shortid';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\n\r\nconst nameInputId = shortid.generate();\r\nconst phoneInputId = shortid.generate();\r\n\r\nclass ContactForm extends Component { \r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = (element) => {\r\n        const { name, value } = element.target;\r\n        this.setState ({ [name]: value }); \r\n    };\r\n\r\n    handleSubmit = (el) => {\r\n        el.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n   render() {\r\n        return (\r\n            \r\n                <form className={styles.wrapper} onSubmit={this.handleSubmit}>\r\n                    <label htmlFor={nameInputId}>Name\r\n                        <input className={styles.input_display}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            id={nameInputId}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                    <label htmlFor={phoneInputId}>Number\r\n                        <input className={styles.input_display}\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                            id={phoneInputId}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                    <button className={styles.button_prime} type=\"submit\" >Add contact</button>\r\n                </form>            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: (name, number) => dispatch(addContact( name, number )),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport styles from './ContactList.module.css';\r\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\r\n\r\nconst ContactList = ({ phoneBook, onDeleteContact }) => {\r\n  return (\r\n      <ul>\r\n        {phoneBook.map(nameContact => (\r\n          <li className={styles.contact} key={nameContact.id}>{nameContact.name}: {nameContact.number}\r\n            <button className={styles.button} type=\"button\" onClick={()=>onDeleteContact(nameContact.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n  )\r\n};\r\n\r\nContactList.propTypes = {\r\n    phoneBook: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst searchFilter = (allContacts, filter) => {\r\n  const caseInsensitive = filter.toLocaleLowerCase();\r\n    return allContacts.filter(contact => \r\n      contact.name.toLocaleLowerCase().includes(caseInsensitive)\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({state: {contacts, filter}}) => ({\r\n  phoneBook: searchFilter(contacts, filter),\r\n})\r\n\r\nconst mapDispatchProps = dispatch => ({\r\n  onDeleteContact: (id) => dispatch(deleteContact(id)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(ContactList);","import React from \"react\";\r\nimport styles from \"./Filter.module.css\"\r\nimport { connect } from 'react-redux';\r\nimport {searchByFilter} from '../../redux/contacts/contacts-actions';\r\n\r\nconst Filter = ({onChange}) => {\r\n    return (\r\n        <label>Find contacts by name\r\n            <input className={styles.input_display}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                onChange={onChange}\r\n            />\r\n        </label>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: (e) => dispatch(searchByFilter(e.target.value)),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\nimport { fetchContacts } from './redux/contacts/contacts-operations';\r\nimport styles from \"./App.module.css\"\r\n\r\nclass App extends Component { \r\n\r\n    state = {};\r\n\r\n    componentDidMount() {\r\n        this.props.fetchContact();\r\n        console.log(this.props);\r\n        console.log(this.props.fetchContact);\r\n        console.log(this.props.fetchContact())\r\n    }\r\n\r\n    handleFilter = (element) => {\r\n        const { value } = element.target;\r\n        this.setState ({ filter: value });  \r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.wrapper}>\r\n                    <h1>Phonebook</h1>\r\n                    <ContactForm /> \r\n                    <h2>Contacts</h2>\r\n                    <Filter /> \r\n                    {this.props.isLoading && <h1>Загружаем...</h1>}\r\n                    <ContactList />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n  \r\nconst mapStateToProps = state => ({\r\n    isLoading: state.loading,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchContact: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n//export default App;","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactSuccess,\r\n    addContactRequest,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    searchByFilter\r\n} from '../contacts/contacts-actions';\r\n\r\nconst contacts = createReducer([  \r\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n], {[fetchContactSuccess]:(_, { payload }) => payload, \r\n    [addContactSuccess]: (state, { payload }) => {\r\n        const duplicateName = state.find(contact => contact.name === payload.name);\r\n        \r\n        if(duplicateName) {\r\n            alert(`${payload.name} is already in contacts.`);\r\n            return state;\r\n        }\r\n\r\n        if(payload.name === \"\") {\r\n            alert(`Please fill out the form it is empty.`);\r\n            return state;\r\n        }\r\n\r\n        if(payload.number === \"\") {\r\n            alert(`Please fill out the form with your phone number, it is empty.`);\r\n            return state;\r\n        }\r\n\r\n        return [payload, ...state,];\r\n    },\r\n    [deleteContactSuccess]: (state, { payload }) => (state.filter(({id}) => id !== payload)),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [searchByFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContactError]: (_, { payload }) => payload,\r\n    [addContactError]: (_, { payload }) => payload,\r\n    [deleteContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n    loading,\r\n    error,\r\n})","import { \r\n // persistStore, \r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER, \r\n} from 'redux-persist';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport logger from 'redux-logger';\r\n\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n  serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n  }, \r\n}), logger]\r\n\r\nconst store = configureStore({\r\n  reducer: { state: contactsReducer },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n//const persistor = persistStore(store);\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n// import { PersistGate } from 'redux-persist/integration/react'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={'loading'} persistor={store.persistor}> */}\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}